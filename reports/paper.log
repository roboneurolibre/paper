Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import numpy as np
import plotly.graph_objects as go
from plotly.offline import init_notebook_mode, iplot
import plotly.express as px
from plotly.subplots import make_subplots

init_notebook_mode(connected=True) 

df = pd.read_pickle('3T_NIST_T1maps_database.pkl')

def pctdif(a1,a2):
    return list(np.abs((a1 - a2)/((a1+a2)/2))*100) 


df = pd.read_pickle('3T_NIST_T1maps_database.pkl')
cc = pd.DataFrame()
dd = pd.DataFrame()
fig = go.Figure()
kek = np.transpose([str(ii).split('.') for ii in list(df.index)])
u, c = np.unique(kek[0], return_counts=True)
for ii in range(len(c)):
    if c[ii] > 1:
        # Iterate over all the sites with multiple entries 
        dec = '{:0>3}'.format(c[ii])
        site_all = df[(df.index>=float(f"{u[ii]}.{'001'}")) & (df.index<=float(f"{u[ii]}.{dec}"))]
        if np.unique(site_all['Data type']).size > 1:
            # If a site has complex & magnitute
            cplx = site_all[site_all['Data type'] == "Complex"]
            mag = site_all[site_all['Data type'] == "Magnitude"]
            if len(cplx) == len(mag):
            # Confirm pairing 
                for jj in range(len(cplx)):
                    # Create scatter pairs for each submission per site 
                    xper = [cplx.iloc[jj][f"T1 - NIST sphere {sphr+1}"] for sphr in range(5)]
                    yper = [mag.iloc[jj][f"T1 - NIST sphere {sphr+1}"] for sphr in range(5)]
                    aa = pd.concat([pd.DataFrame(data={'magnitude':list(yper[i][:]),'complex':list(xper[i][:]),'dif':pctdif(xper[i][:],yper[i][:]),'sphere':[f"Sphere {i+1}"]*len(xper[i][:]),'site':[mag.iloc[jj]['site name']]*len(xper[i][:])}) for i in range(5)],
                    ignore_index=True)
                    xdat = np.concatenate(xper).ravel().tolist()
                    ydat = np.concatenate(yper).ravel().tolist()
                    difdat = np.array(pctdif(np.array(xdat),np.array(ydat)))
                    difdat = np.interp(difdat, (difdat.min(), difdat.max()), (2, 30))
                    fig.add_trace(go.Scatter(x=ydat,y=xdat,marker=dict(size=list(difdat.astype(int))),mode="markers",name=mag.iloc[jj]['site name']))
                    cc = pd.concat([aa,cc],ignore_index=True)

fig.update_layout(shapes = [{'type': 'line', 'yref': 'paper', 'xref': 'paper', 'y0': 0, 'y1': 1, 'x0': 0, 'x1': 1,'layer':'below'}])
fig.update_traces(opacity=0.8)
fig.update_layout(margin=dict(l=0, r=0, t=0, b=30),paper_bgcolor = "rgba(0,0,0,0)", plot_bgcolor="rgba(0,0,0,0)", legend_title="")
fig.update_yaxes(color='black',gridwidth=1, gridcolor='rgba(0,0,0,0.2)', title="T1 (ms) complex-only data",showline=True, linewidth=2,linecolor='black')
fig.update_xaxes(gridwidth=1, gridcolor='rgba(0,0,0,0.2)', title="T1 (ms) magnitude-only data",showline=True, linewidth=2,linecolor='black')
fig.add_annotation(x=2209.9, y=2331.6,
            text="122ms (5%) difference",
            showarrow=True,
            arrowhead=2)
fig.add_annotation(x=1885.9, y=1705,
            text="163ms (9%) difference",
            showarrow=True,
            arrowhead=2,yanchor="bottom",ay=40)
fig.add_annotation(x=1324.9, y=1297.9,
            text="16ms (2%) difference",
            showarrow=True,
            arrowhead=2,yanchor="bottom",xanchor='left',ay=40)
fig.add_annotation(x=739.8, y=639.3,
            text="48ms (7%) difference",
            showarrow=True,
            arrowhead=2,yanchor="bottom",xanchor='left',ay=40)
fig.update_layout(height=600,yaxis_range=[500,2500],xaxis_range=[500,2500])

plot(fig, filename = 'figure4.html', config = config)
display(HTML('figure4.html'))       
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[7], line 10[0m
[1;32m      6[0m [38;5;28;01mfrom[39;00m [38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01msubplots[39;00m [38;5;28;01mimport[39;00m make_subplots
[1;32m      8[0m init_notebook_mode(connected[38;5;241m=[39m[38;5;28;01mTrue[39;00m) 
[0;32m---> 10[0m df [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mread_pickle[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m3T_NIST_T1maps_database.pkl[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     12[0m [38;5;28;01mdef[39;00m [38;5;21mpctdif[39m(a1,a2):
[1;32m     13[0m     [38;5;28;01mreturn[39;00m [38;5;28mlist[39m(np[38;5;241m.[39mabs((a1 [38;5;241m-[39m a2)[38;5;241m/[39m((a1[38;5;241m+[39ma2)[38;5;241m/[39m[38;5;241m2[39m))[38;5;241m*[39m[38;5;241m100[39m) 

File [0;32m/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/pandas/io/pickle.py:190[0m, in [0;36mread_pickle[0;34m(filepath_or_buffer, compression, storage_options)[0m
[1;32m    124[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    125[0m [38;5;124;03mLoad pickled pandas object (or any object) from file.[39;00m
[1;32m    126[0m 
[0;32m   (...)[0m
[1;32m    187[0m [38;5;124;03m4    4    9[39;00m
[1;32m    188[0m [38;5;124;03m"""[39;00m
[1;32m    189[0m excs_to_catch [38;5;241m=[39m ([38;5;167;01mAttributeError[39;00m, [38;5;167;01mImportError[39;00m, [38;5;167;01mModuleNotFoundError[39;00m, [38;5;167;01mTypeError[39;00m)
[0;32m--> 190[0m [38;5;28;01mwith[39;00m [43mget_handle[49m[43m([49m
[1;32m    191[0m [43m    [49m[43mfilepath_or_buffer[49m[43m,[49m
[1;32m    192[0m [43m    [49m[38;5;124;43m"[39;49m[38;5;124;43mrb[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m    193[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[43mcompression[49m[43m,[49m
[1;32m    194[0m [43m    [49m[43mis_text[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    195[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    196[0m [43m[49m[43m)[49m [38;5;28;01mas[39;00m handles:
[1;32m    197[0m 
[1;32m    198[0m     [38;5;66;03m# 1) try standard library Pickle[39;00m
[1;32m    199[0m     [38;5;66;03m# 2) try pickle_compat (older pandas version) to handle subclass changes[39;00m
[1;32m    200[0m     [38;5;66;03m# 3) try pickle_compat with latin-1 encoding upon a UnicodeDecodeError[39;00m
[1;32m    202[0m     [38;5;28;01mtry[39;00m:
[1;32m    203[0m         [38;5;66;03m# TypeError for Cython complaints about object.__new__ vs Tick.__new__[39;00m
[1;32m    204[0m         [38;5;28;01mtry[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.8.16/x64/lib/python3.8/site-packages/pandas/io/common.py:865[0m, in [0;36mget_handle[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[1;32m    856[0m         handle [38;5;241m=[39m [38;5;28mopen[39m(
[1;32m    857[0m             handle,
[1;32m    858[0m             ioargs[38;5;241m.[39mmode,
[0;32m   (...)[0m
[1;32m    861[0m             newline[38;5;241m=[39m[38;5;124m"[39m[38;5;124m"[39m,
[1;32m    862[0m         )
[1;32m    863[0m     [38;5;28;01melse[39;00m:
[1;32m    864[0m         [38;5;66;03m# Binary mode[39;00m
[0;32m--> 865[0m         handle [38;5;241m=[39m [38;5;28;43mopen[39;49m[43m([49m[43mhandle[49m[43m,[49m[43m [49m[43mioargs[49m[38;5;241;43m.[39;49m[43mmode[49m[43m)[49m
[1;32m    866[0m     handles[38;5;241m.[39mappend(handle)
[1;32m    868[0m [38;5;66;03m# Convert BytesIO or file objects passed with an encoding[39;00m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '3T_NIST_T1maps_database.pkl'
FileNotFoundError: [Errno 2] No such file or directory: '3T_NIST_T1maps_database.pkl'

